package basecode;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.TreeMap;

/**
 * Dialog dynamique permettant l'entrée d'IPs de serveurs JMS
 *
 * @author Yvan
 */
public class CustomInputAdresses extends javax.swing.JDialog {

    /**
     * Map stockant les IP pour chaque file à traiter
     */
    private TreeMap<FilesJMS, Adresse> data;
    /**
     * Map stockant les panels d'input d'IP affichés
     */
    private TreeMap<FilesJMS, AdresseInputPanel> panels;

    /**
     * Creates new form CustomInputAdresses
     *
     * @param data Files à renseigner
     */
    public CustomInputAdresses(TreeMap<FilesJMS, Adresse> data) {
        super();
        initComponents();
        this.data = data;

        //ajout panels
        this.panels = new TreeMap<>();
        for (FilesJMS f : data.keySet()) {
            AdresseInputPanel pan = new AdresseInputPanel(f);
            this.panels.put(f, pan);
            this.panelAdresses.add(pan);
        }

        this.pack();
        this.setLocationRelativeTo(null);
        this.okButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                exitRetour();
            }
        });
    }

    /**
     * Termine la fenêtre et enregistre les données des champs affichés
     */
    public void exitRetour() {
        for (FilesJMS f : data.keySet()) {
            data.get(f).setIp(panels.get(f).getTextIP());
        }
        setVisible(false);
        dispose();
    }

    /**
     * Affiche le Dialog et retourne les valeurs entrées à sa fermeture
     *
     * @return IPs renseignées par file
     */
    public boolean showDialog() {
        this.setVisible(true);
        return true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelDialog = new javax.swing.JLabel();
        okButton = new javax.swing.JButton();
        panelAdresses = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Données nécessaires");
        setModal(true);

        labelDialog.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelDialog.setText("Remplir les IP des files suivantes :");

        okButton.setText("Lancer");

        panelAdresses.setMaximumSize(new java.awt.Dimension(370, 32767));
        panelAdresses.setMinimumSize(new java.awt.Dimension(370, 10));
        panelAdresses.setLayout(new javax.swing.BoxLayout(panelAdresses, javax.swing.BoxLayout.PAGE_AXIS));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 111, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(labelDialog)
                                .addGap(107, 107, 107))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(okButton)
                                .addGap(153, 153, 153))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(panelAdresses, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelDialog)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelAdresses, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(okButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel labelDialog;
    private javax.swing.JButton okButton;
    private javax.swing.JPanel panelAdresses;
    // End of variables declaration//GEN-END:variables
}
